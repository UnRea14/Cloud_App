{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport setColor from 'color';\nimport { withTheme } from \"../core/theming\";\nvar INDETERMINATE_DURATION = 2000;\nvar INDETERMINATE_MAX_WIDTH = 0.6;\nvar isRTL = I18nManager.isRTL;\n\nvar ProgressBar = function (_React$Component) {\n  _inherits(ProgressBar, _React$Component);\n\n  var _super = _createSuper(ProgressBar);\n\n  function ProgressBar() {\n    var _this;\n\n    _classCallCheck(this, ProgressBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      width: 0,\n      timer: new Animated.Value(0),\n      fade: new Animated.Value(0)\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"indeterminateAnimation\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"onLayout\", function (event) {\n      var visible = _this.props.visible;\n      var previousWidth = _this.state.width;\n\n      _this.setState({\n        width: event.nativeEvent.layout.width\n      }, function () {\n        if (visible && previousWidth === 0) {\n          _this.startAnimation();\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"startAnimation\", function () {\n      var _this$props2 = _this.props,\n          indeterminate = _this$props2.indeterminate,\n          progress = _this$props2.progress,\n          scale = _this$props2.theme.animation.scale;\n      var _this$state = _this.state,\n          fade = _this$state.fade,\n          timer = _this$state.timer;\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 1,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start();\n\n      if (indeterminate) {\n        if (!_this.indeterminateAnimation) {\n          _this.indeterminateAnimation = Animated.timing(timer, {\n            duration: INDETERMINATE_DURATION,\n            toValue: 1,\n            useNativeDriver: Platform.OS !== 'web',\n            isInteraction: false\n          });\n        }\n\n        timer.setValue(0);\n        Animated.loop(_this.indeterminateAnimation).start();\n      } else {\n        Animated.timing(timer, {\n          duration: 200 * scale,\n          toValue: progress ? progress : 0,\n          useNativeDriver: true,\n          isInteraction: false\n        }).start();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopAnimation\", function () {\n      var fade = _this.state.fade;\n      var scale = _this.props.theme.animation.scale;\n\n      if (_this.indeterminateAnimation) {\n        _this.indeterminateAnimation.stop();\n      }\n\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start();\n    });\n\n    return _this;\n  }\n\n  _createClass(ProgressBar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n          visible = _this$props3.visible,\n          progress = _this$props3.progress;\n\n      if (progress !== prevProps.progress || visible !== prevProps.visible) {\n        if (visible) {\n          this.startAnimation();\n        } else {\n          this.stopAnimation();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          indeterminate = _this$props.indeterminate,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          progress = _this$props.progress,\n          visible = _this$props.visible,\n          rest = _objectWithoutProperties(_this$props, [\"color\", \"indeterminate\", \"style\", \"theme\", \"progress\", \"visible\"]);\n\n      var _this$state2 = this.state,\n          fade = _this$state2.fade,\n          timer = _this$state2.timer,\n          width = _this$state2.width;\n      var tintColor = color || theme.colors.primary;\n      var trackTintColor = setColor(tintColor).alpha(0.38).rgb().string();\n      return React.createElement(View, _extends({\n        onLayout: this.onLayout\n      }, rest), React.createElement(Animated.View, {\n        style: [styles.container, {\n          backgroundColor: trackTintColor,\n          opacity: fade\n        }, style]\n      }, React.createElement(Animated.View, {\n        style: [styles.progressBar, {\n          backgroundColor: tintColor,\n          width: width,\n          transform: [{\n            translateX: timer.interpolate(indeterminate ? {\n              inputRange: [0, 0.5, 1],\n              outputRange: [(isRTL ? 1 : -1) * 0.5 * width, (isRTL ? 1 : -1) * 0.5 * INDETERMINATE_MAX_WIDTH * width, (isRTL ? -1 : 1) * 0.7 * width]\n            } : {\n              inputRange: [0, 1],\n              outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0]\n            })\n          }, {\n            scaleX: timer.interpolate(indeterminate ? {\n              inputRange: [0, 0.5, 1],\n              outputRange: [0.0001, INDETERMINATE_MAX_WIDTH, 0.0001]\n            } : {\n              inputRange: [0, 1],\n              outputRange: [0.0001, 1]\n            })\n          }]\n        }]\n      })));\n    }\n  }]);\n\n  return ProgressBar;\n}(React.Component);\n\n_defineProperty(ProgressBar, \"defaultProps\", {\n  visible: true,\n  progress: 0\n});\n\nvar styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden'\n  },\n  progressBar: {\n    flex: 1\n  }\n});\nexport default withTheme(ProgressBar);","map":{"version":3,"sources":["ProgressBar.tsx"],"names":["INDETERMINATE_DURATION","INDETERMINATE_MAX_WIDTH","isRTL","ProgressBar","React","visible","progress","width","timer","Animated","fade","componentDidUpdate","prevProps","event","previousWidth","theme","animation","scale","duration","toValue","useNativeDriver","isInteraction","Platform","render","tintColor","color","trackTintColor","setColor","onLayout","styles","backgroundColor","opacity","transform","translateX","indeterminate","inputRange","outputRange","scaleX","container","height","overflow","progressBar","flex","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n  LayoutChangeEvent,\n  I18nManager,\n} from 'react-native';\nimport setColor from 'color';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Progress value (between 0 and 1).\n   */\n  progress?: number;\n  /**\n   * Color of the progress bar. The background color will be calculated based on this but you can change it by passing `backgroundColor` to `style` prop.\n   */\n  color?: string;\n  /**\n   * If the progress bar will show indeterminate progress.\n   */\n  indeterminate?: boolean;\n  /**\n   * Whether to show the ProgressBar (true, the default) or hide it (false).\n   */\n  visible?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  width: number;\n  fade: Animated.Value;\n  timer: Animated.Value;\n};\n\nconst INDETERMINATE_DURATION = 2000;\nconst INDETERMINATE_MAX_WIDTH = 0.6;\nconst { isRTL } = I18nManager;\n\n/**\n * Progress bar is an indicator used to present progress of some activity in the app.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/progress-bar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ProgressBar, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ProgressBar progress={0.5} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass ProgressBar extends React.Component<Props, State> {\n  static defaultProps = {\n    visible: true,\n    progress: 0,\n  };\n\n  state = {\n    width: 0,\n    timer: new Animated.Value(0),\n    fade: new Animated.Value(0),\n  };\n\n  indeterminateAnimation: Animated.CompositeAnimation | null = null;\n\n  componentDidUpdate(prevProps: Props) {\n    const { visible, progress } = this.props;\n\n    if (progress !== prevProps.progress || visible !== prevProps.visible) {\n      if (visible) {\n        this.startAnimation();\n      } else {\n        this.stopAnimation();\n      }\n    }\n  }\n\n  private onLayout = (event: LayoutChangeEvent) => {\n    const { visible } = this.props;\n    const { width: previousWidth } = this.state;\n\n    this.setState({ width: event.nativeEvent.layout.width }, () => {\n      // Start animation the very first time when previously the width was unclear\n      if (visible && previousWidth === 0) {\n        this.startAnimation();\n      }\n    });\n  };\n\n  private startAnimation = () => {\n    const {\n      indeterminate,\n      progress,\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n    const { fade, timer } = this.state;\n\n    // Show progress bar\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n\n    // Animate progress bar\n    if (indeterminate) {\n      if (!this.indeterminateAnimation) {\n        this.indeterminateAnimation = Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          // Animated.loop does not work if useNativeDriver is true on web\n          useNativeDriver: Platform.OS !== 'web',\n          isInteraction: false,\n        });\n      }\n\n      // Reset timer to the beginning\n      timer.setValue(0);\n\n      Animated.loop(this.indeterminateAnimation).start();\n    } else {\n      Animated.timing(timer, {\n        duration: 200 * scale,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start();\n    }\n  };\n\n  private stopAnimation = () => {\n    const { fade } = this.state;\n    const { scale } = this.props.theme.animation;\n\n    // Stop indeterminate animation\n    if (this.indeterminateAnimation) {\n      this.indeterminateAnimation.stop();\n    }\n\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n  };\n\n  render() {\n    const {\n      color,\n      indeterminate,\n      style,\n      theme,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      progress,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      visible,\n      ...rest\n    } = this.props;\n    const { fade, timer, width } = this.state;\n    const tintColor = color || theme.colors.primary;\n    const trackTintColor = setColor(tintColor)\n      .alpha(0.38)\n      .rgb()\n      .string();\n\n    return (\n      <View onLayout={this.onLayout} {...rest}>\n        <Animated.View\n          style={[\n            styles.container,\n            { backgroundColor: trackTintColor, opacity: fade },\n            style,\n          ]}\n        >\n          <Animated.View\n            style={[\n              styles.progressBar,\n              {\n                backgroundColor: tintColor,\n                width,\n                transform: [\n                  {\n                    translateX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              (isRTL ? 1 : -1) * 0.5 * width,\n                              (isRTL ? 1 : -1) *\n                                0.5 *\n                                INDETERMINATE_MAX_WIDTH *\n                                width,\n                              (isRTL ? -1 : 1) * 0.7 * width,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0],\n                          }\n                    ),\n                  },\n                  {\n                    // Workaround for workaround for https://github.com/facebook/react-native/issues/6278\n                    scaleX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              0.0001,\n                              INDETERMINATE_MAX_WIDTH,\n                              0.0001,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [0.0001, 1],\n                          }\n                    ),\n                  },\n                ],\n              },\n            ]}\n          />\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden',\n  },\n\n  progressBar: {\n    flex: 1,\n  },\n});\n\nexport default withTheme(ProgressBar);\n"]},"metadata":{},"sourceType":"module"}