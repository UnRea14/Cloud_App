{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar server_ip = 'https://14fb-77-137-180-250.ngrok.io';\nexport default function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      _useState2$ = _useState2[0],\n      name = _useState2$ === void 0 ? '' : _useState2$,\n      setName = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      _useState4$ = _useState4[0],\n      email = _useState4$ === void 0 ? '' : _useState4$,\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      _useState6$ = _useState6[0],\n      password = _useState6$ === void 0 ? '' : _useState6$,\n      setPassword = _useState6[1];\n\n  var insertUser = function insertUser() {\n    var response, json;\n    return _regeneratorRuntime.async(function insertUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://14fb-77-137-180-250.ngrok.io/register', {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                user_name: name,\n                user_email: email,\n                user_password: password\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            json = _context.sent;\n            if (json === \"User registered, verify your email by the email sent to you in your email\") Alert.alert('', json, [{\n              text: \"Ok\",\n              onPress: navigation.reset({\n                index: 0,\n                routes: [{\n                  name: \"Login\"\n                }]\n              })\n            }]);else Alert.alert('', json);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.regform,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Register a new account\"\n    }), _jsx(TextInput, {\n      style: styles.textinput,\n      placeholder: \"Name\",\n      underlineColorAndroid: \"transparent\",\n      onChangeText: function onChangeText(val) {\n        return setName(val);\n      }\n    }), _jsx(TextInput, {\n      style: styles.textinput,\n      placeholder: \"Email\",\n      underlineColorAndroid: \"transparent\",\n      onChangeText: function onChangeText(val) {\n        return setEmail(val);\n      }\n    }), _jsx(TextInput, {\n      style: styles.textinput,\n      placeholder: \"Password\",\n      underlineColorAndroid: \"transparent\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(val) {\n        return setPassword(val);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return insertUser();\n      },\n      children: _jsx(Text, {\n        style: styles.buttontext,\n        children: \"Register\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  regform: {\n    alignSelf: \"stretch\",\n    flex: 1,\n    paddingLeft: 60,\n    paddingRight: 60,\n    justifyContent: \"center\"\n  },\n  header: {\n    fontSize: 24,\n    color: \"black\",\n    paddingBottom: 10,\n    marginBottom: 40,\n    borderBottomColor: \"#199187\",\n    borderBottomWidth: 1\n  },\n  textinput: {\n    alignSelf: \"stretch\",\n    height: 40,\n    marginBottom: 30,\n    color: \"grey\",\n    borderBottomColor: \"#199187\",\n    borderBottomWidth: 1\n  },\n  button: {\n    alignSelf: \"stretch\",\n    alignItems: \"center\",\n    padding: 20,\n    backgroundColor: \"grey\",\n    marginTop: 30\n  },\n  buttontext: {\n    color: \"#fff\",\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"names":["React","useState","server_ip","Register","navigation","name","setName","email","setEmail","password","setPassword","insertUser","fetch","method","headers","body","JSON","stringify","user_name","user_email","user_password","response","json","Alert","alert","text","onPress","reset","index","routes","styles","regform","header","textinput","val","button","buttontext","StyleSheet","create","alignSelf","flex","paddingLeft","paddingRight","justifyContent","fontSize","color","paddingBottom","marginBottom","borderBottomColor","borderBottomWidth","height","alignItems","padding","backgroundColor","marginTop","fontWeight"],"sources":["C:/Users/cyber/Desktop/Cloud_App/app/components/RegisterScreen.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {StyleSheet, Text, View, TextInput, TouchableOpacity, Alert} from 'react-native';\r\nconst server_ip = 'https://14fb-77-137-180-250.ngrok.io'\r\n\r\nexport default function Register({navigation}){\r\n    const [name='', setName] = useState()\r\n    const [email='', setEmail] = useState()\r\n    const [password='', setPassword] = useState()\r\n\r\n    const insertUser = async () => {\r\n        let response = await fetch('https://14fb-77-137-180-250.ngrok.io/register', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              user_name: name,\r\n              user_email: email,\r\n              user_password: password\r\n            })\r\n        })\r\n        let json = await response.json()\r\n        if (json === \"User registered, verify your email by the email sent to you in your email\")\r\n            Alert.alert('',json,[{text: \"Ok\", onPress: navigation.reset({\r\n                index:0,\r\n                routes:[\r\n                  {\r\n                    name:\"Login\",\r\n                  },\r\n                ]})}])\r\n        else \r\n            Alert.alert('',json)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.regform}>\r\n            <Text style={styles.header}>Register a new account</Text>\r\n            <TextInput style={styles.textinput} placeholder=\"Name\" underlineColorAndroid={\"transparent\"} onChangeText={(val) => setName(val)}/>\r\n            <TextInput style={styles.textinput} placeholder=\"Email\" underlineColorAndroid={\"transparent\"} onChangeText={(val) => setEmail(val)}/>\r\n            <TextInput style={styles.textinput} placeholder=\"Password\" underlineColorAndroid={\"transparent\"} secureTextEntry={true} onChangeText={(val) => setPassword(val)}/>\r\n            <TouchableOpacity style={styles.button} onPress={() => insertUser()}>\r\n                <Text style={styles.buttontext}>Register</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    regform:{\r\n        alignSelf: \"stretch\",\r\n        flex: 1,\r\n        paddingLeft: 60,\r\n        paddingRight: 60,\r\n        justifyContent: \"center\"\r\n    },\r\n    header:{\r\n        fontSize: 24,\r\n        color: \"black\",\r\n        paddingBottom: 10,\r\n        marginBottom: 40,\r\n        borderBottomColor: \"#199187\",\r\n        borderBottomWidth: 1,\r\n    },\r\n    textinput:{\r\n        alignSelf: \"stretch\",\r\n        height: 40,\r\n        marginBottom: 30,\r\n        color: \"grey\",\r\n        borderBottomColor: \"#199187\",\r\n        borderBottomWidth: 1,\r\n    },\r\n    button: {\r\n        alignSelf: \"stretch\",\r\n        alignItems: \"center\",\r\n        padding: 20,\r\n        backgroundColor: \"grey\",\r\n        marginTop: 30,\r\n    },\r\n    buttontext:{\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\"\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}