{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withTheme } from \"../core/theming\";\nvar DURATION = 2400;\n\nvar ActivityIndicator = function (_React$Component) {\n  _inherits(ActivityIndicator, _React$Component);\n\n  var _super = _createSuper(ActivityIndicator);\n\n  function ActivityIndicator() {\n    var _this;\n\n    _classCallCheck(this, ActivityIndicator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      timer: new Animated.Value(0),\n      fade: new Animated.Value(!_this.props.animating && _this.props.hidesWhenStopped ? 0 : 1)\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"rotation\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"startRotation\", function () {\n      var _this$state = _this.state,\n          fade = _this$state.fade,\n          timer = _this$state.timer;\n      var scale = _this.props.theme.animation.scale;\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 1,\n        isInteraction: false,\n        useNativeDriver: true\n      }).start();\n\n      if (_this.rotation) {\n        timer.setValue(0);\n        Animated.loop(_this.rotation).start();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopRotation\", function () {\n      if (_this.rotation) {\n        _this.rotation.stop();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(ActivityIndicator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var animating = this.props.animating;\n      var timer = this.state.timer;\n      this.rotation = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false\n      });\n\n      if (animating) {\n        this.startRotation();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props2 = this.props,\n          animating = _this$props2.animating,\n          hidesWhenStopped = _this$props2.hidesWhenStopped,\n          scale = _this$props2.theme.animation.scale;\n      var fade = this.state.fade;\n\n      if (animating !== prevProps.animating) {\n        if (animating) {\n          this.startRotation();\n        } else if (hidesWhenStopped) {\n          Animated.timing(fade, {\n            duration: 200 * scale,\n            toValue: 0,\n            useNativeDriver: true,\n            isInteraction: false\n          }).start(this.stopRotation.bind(this));\n        } else {\n          this.stopRotation();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          fade = _this$state2.fade,\n          timer = _this$state2.timer;\n\n      var _this$props = this.props,\n          animating = _this$props.animating,\n          indicatorColor = _this$props.color,\n          hidesWhenStopped = _this$props.hidesWhenStopped,\n          indicatorSize = _this$props.size,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\", \"theme\"]);\n\n      var color = indicatorColor || theme.colors.primary;\n      var size = typeof indicatorSize === 'string' ? indicatorSize === 'small' ? 24 : 48 : indicatorSize ? indicatorSize : 24;\n      var frames = 60 * DURATION / 1000;\n      var easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n      var containerStyle = {\n        width: size,\n        height: size / 2,\n        overflow: 'hidden'\n      };\n      return React.createElement(View, _extends({\n        style: [styles.container, style]\n      }, rest), React.createElement(Animated.View, {\n        style: [{\n          width: size,\n          height: size,\n          opacity: fade\n        }],\n        collapsable: false\n      }, [0, 1].map(function (index) {\n        var inputRange = Array.from(new Array(frames), function (_, frameIndex) {\n          return frameIndex / (frames - 1);\n        });\n        var outputRange = Array.from(new Array(frames), function (_, frameIndex) {\n          var progress = 2 * frameIndex / (frames - 1);\n          var rotation = index ? +(360 - 15) : -(180 - 15);\n\n          if (progress > 1.0) {\n            progress = 2.0 - progress;\n          }\n\n          var direction = index ? -1 : +1;\n          return \"\".concat(direction * (180 - 30) * easing(progress) + rotation, \"deg\");\n        });\n        var layerStyle = {\n          width: size,\n          height: size,\n          transform: [{\n            rotate: timer.interpolate({\n              inputRange: [0, 1],\n              outputRange: [\"\".concat(0 + 30 + 15, \"deg\"), \"\".concat(2 * 360 + 30 + 15, \"deg\")]\n            })\n          }]\n        };\n        var viewportStyle = {\n          width: size,\n          height: size,\n          transform: [{\n            translateY: index ? -size / 2 : 0\n          }, {\n            rotate: timer.interpolate({\n              inputRange: inputRange,\n              outputRange: outputRange\n            })\n          }]\n        };\n        var offsetStyle = index ? {\n          top: size / 2\n        } : null;\n        var lineStyle = {\n          width: size,\n          height: size,\n          borderColor: color,\n          borderWidth: size / 10,\n          borderRadius: size / 2\n        };\n        return React.createElement(Animated.View, {\n          key: index,\n          style: [styles.layer]\n        }, React.createElement(Animated.View, {\n          style: layerStyle\n        }, React.createElement(Animated.View, {\n          style: [containerStyle, offsetStyle],\n          collapsable: false\n        }, React.createElement(Animated.View, {\n          style: viewportStyle\n        }, React.createElement(Animated.View, {\n          style: containerStyle,\n          collapsable: false\n        }, React.createElement(Animated.View, {\n          style: lineStyle\n        }))))));\n      })));\n    }\n  }]);\n\n  return ActivityIndicator;\n}(React.Component);\n\n_defineProperty(ActivityIndicator, \"defaultProps\", {\n  animating: true,\n  size: 'small',\n  hidesWhenStopped: true\n});\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  layer: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'center',\n    alignItems: 'center'\n  })\n});\nexport default withTheme(ActivityIndicator);","map":{"version":3,"sources":["ActivityIndicator.tsx"],"names":["DURATION","ActivityIndicator","React","animating","size","hidesWhenStopped","timer","Animated","fade","componentDidMount","duration","easing","Easing","useNativeDriver","Platform","toValue","isInteraction","componentDidUpdate","theme","animation","scale","prevProps","render","color","indicatorColor","indicatorSize","frames","containerStyle","width","height","overflow","styles","opacity","index","inputRange","Array","frameIndex","outputRange","progress","rotation","direction","layerStyle","transform","rotate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","container","justifyContent","alignItems","layer","StyleSheet","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Whether to show the indicator or hide it.\n   */\n  animating?: boolean;\n  /**\n   * The color of the spinner.\n   */\n  color?: string;\n  /**\n   * Size of the indicator.\n   */\n  size?: 'small' | 'large' | number;\n  /**\n   * Whether the indicator should hide when not animating.\n   */\n  hidesWhenStopped?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  timer: Animated.Value;\n  fade: Animated.Value;\n};\n\nconst DURATION = 2400;\n\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass ActivityIndicator extends React.Component<Props, State> {\n  static defaultProps: Partial<Props> = {\n    animating: true,\n    size: 'small',\n    hidesWhenStopped: true,\n  };\n\n  state = {\n    timer: new Animated.Value(0),\n    fade: new Animated.Value(\n      !this.props.animating && this.props.hidesWhenStopped ? 0 : 1\n    ),\n  };\n\n  rotation: Animated.CompositeAnimation | undefined = undefined;\n\n  componentDidMount() {\n    const { animating } = this.props;\n    const { timer } = this.state;\n\n    // Circular animation in loop\n    this.rotation = Animated.timing(timer, {\n      duration: DURATION,\n      easing: Easing.linear,\n      // Animated.loop does not work if useNativeDriver is true on web\n      useNativeDriver: Platform.OS !== 'web',\n      toValue: 1,\n      isInteraction: false,\n    });\n\n    if (animating) {\n      this.startRotation();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {\n      animating,\n      hidesWhenStopped,\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n    const { fade } = this.state;\n\n    if (animating !== prevProps.animating) {\n      if (animating) {\n        this.startRotation();\n      } else if (hidesWhenStopped) {\n        // Hide indicator first and then stop rotation\n        Animated.timing(fade, {\n          duration: 200 * scale,\n          toValue: 0,\n          useNativeDriver: true,\n          isInteraction: false,\n        }).start(this.stopRotation.bind(this));\n      } else {\n        this.stopRotation();\n      }\n    }\n  }\n\n  private startRotation = () => {\n    const { fade, timer } = this.state;\n    const { scale } = this.props.theme.animation;\n\n    // Show indicator\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true,\n    }).start();\n\n    // Circular animation in loop\n    if (this.rotation) {\n      timer.setValue(0);\n      // $FlowFixMe\n      Animated.loop(this.rotation).start();\n    }\n  };\n\n  private stopRotation = () => {\n    if (this.rotation) {\n      this.rotation.stop();\n    }\n  };\n\n  render() {\n    const { fade, timer } = this.state;\n    const {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      animating,\n      color: indicatorColor,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      hidesWhenStopped,\n      size: indicatorSize,\n      style,\n      theme,\n      ...rest\n    } = this.props;\n    const color = indicatorColor || theme.colors.primary;\n    const size =\n      typeof indicatorSize === 'string'\n        ? indicatorSize === 'small'\n          ? 24\n          : 48\n        : indicatorSize\n        ? indicatorSize\n        : 24;\n\n    const frames = (60 * DURATION) / 1000;\n    const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n    const containerStyle = {\n      width: size,\n      height: size / 2,\n      overflow: 'hidden',\n    };\n\n    return (\n      <View style={[styles.container, style]} {...rest}>\n        <Animated.View\n          style={[{ width: size, height: size, opacity: fade }]}\n          collapsable={false}\n        >\n          {[0, 1].map(index => {\n            // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n            const inputRange = Array.from(\n              new Array(frames),\n              (_, frameIndex) => frameIndex / (frames - 1)\n            );\n            const outputRange = Array.from(\n              new Array(frames),\n              (_, frameIndex) => {\n                let progress = (2 * frameIndex) / (frames - 1);\n                const rotation = index ? +(360 - 15) : -(180 - 15);\n\n                if (progress > 1.0) {\n                  progress = 2.0 - progress;\n                }\n\n                const direction = index ? -1 : +1;\n\n                return `${direction * (180 - 30) * easing(progress) +\n                  rotation}deg`;\n              }\n            );\n\n            const layerStyle = {\n              width: size,\n              height: size,\n              transform: [\n                {\n                  rotate: timer.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [\n                      `${0 + 30 + 15}deg`,\n                      `${2 * 360 + 30 + 15}deg`,\n                    ],\n                  }),\n                },\n              ],\n            };\n\n            const viewportStyle = {\n              width: size,\n              height: size,\n              transform: [\n                {\n                  translateY: index ? -size / 2 : 0,\n                },\n                {\n                  rotate: timer.interpolate({ inputRange, outputRange }),\n                },\n              ],\n            };\n\n            const offsetStyle = index ? { top: size / 2 } : null;\n\n            const lineStyle = {\n              width: size,\n              height: size,\n              borderColor: color,\n              borderWidth: size / 10,\n              borderRadius: size / 2,\n            };\n\n            return (\n              <Animated.View key={index} style={[styles.layer]}>\n                <Animated.View style={layerStyle}>\n                  <Animated.View\n                    style={[containerStyle, offsetStyle]}\n                    collapsable={false}\n                  >\n                    <Animated.View style={viewportStyle}>\n                      <Animated.View style={containerStyle} collapsable={false}>\n                        <Animated.View style={lineStyle} />\n                      </Animated.View>\n                    </Animated.View>\n                  </Animated.View>\n                </Animated.View>\n              </Animated.View>\n            );\n          })}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  layer: {\n    ...StyleSheet.absoluteFillObject,\n\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(ActivityIndicator);\n"]},"metadata":{},"sourceType":"module"}