{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport NativeTextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport color from 'color';\nimport InputLabel from \"./Label/InputLabel\";\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, LABEL_PADDING_HORIZONTAL } from \"./constants\";\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingFlat, interpolatePlaceholder } from \"./helpers\";\nvar MINIMIZED_LABEL_Y_OFFSET = -18;\nvar LABEL_PADDING_TOP = 30;\nvar LABEL_PADDING_TOP_DENSE = 24;\nvar MIN_HEIGHT = 64;\nvar MIN_DENSE_HEIGHT_WL = 52;\nvar MIN_DENSE_HEIGHT = 40;\nvar INPUT_OFFSET = 8;\n\nvar TextInputFlat = function (_React$Component) {\n  _inherits(TextInputFlat, _React$Component);\n\n  var _super = _createSuper(TextInputFlat);\n\n  function TextInputFlat() {\n    _classCallCheck(this, TextInputFlat);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TextInputFlat, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          editable = _this$props.editable,\n          label = _this$props.label,\n          error = _this$props.error,\n          selectionColor = _this$props.selectionColor,\n          underlineColor = _this$props.underlineColor,\n          dense = _this$props.dense,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          render = _this$props.render,\n          multiline = _this$props.multiline,\n          parentState = _this$props.parentState,\n          innerRef = _this$props.innerRef,\n          onFocus = _this$props.onFocus,\n          onBlur = _this$props.onBlur,\n          onChangeText = _this$props.onChangeText,\n          onLayoutAnimatedText = _this$props.onLayoutAnimatedText,\n          rest = _objectWithoutProperties(_this$props, [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"underlineColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\"]);\n\n      var colors = theme.colors,\n          fonts = theme.fonts;\n      var font = fonts.regular;\n      var hasActiveOutline = parentState.focused || error;\n\n      var _ref = StyleSheet.flatten(style) || {},\n          fontSizeStyle = _ref.fontSize,\n          fontWeight = _ref.fontWeight,\n          height = _ref.height,\n          paddingHorizontal = _ref.paddingHorizontal,\n          viewStyle = _objectWithoutProperties(_ref, [\"fontSize\", \"fontWeight\", \"height\", \"paddingHorizontal\"]);\n\n      var fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n      var paddingOffset = paddingHorizontal !== undefined && typeof paddingHorizontal === 'number' ? {\n        paddingHorizontal: paddingHorizontal\n      } : StyleSheet.flatten(styles.paddingOffset);\n      var inputTextColor, activeColor, underlineColorCustom, placeholderColor, errorColor;\n\n      if (disabled) {\n        inputTextColor = activeColor = color(colors.text).alpha(0.54).rgb().string();\n        placeholderColor = colors.disabled;\n        underlineColorCustom = 'transparent';\n      } else {\n        inputTextColor = colors.text;\n        activeColor = error ? colors.error : colors.primary;\n        placeholderColor = colors.placeholder;\n        errorColor = colors.error;\n        underlineColorCustom = underlineColor || colors.disabled;\n      }\n\n      var containerStyle = {\n        backgroundColor: theme.dark ? color(colors.background).lighten(0.24).rgb().string() : color(colors.background).darken(0.06).rgb().string(),\n        borderTopLeftRadius: theme.roundness,\n        borderTopRightRadius: theme.roundness\n      };\n      var labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n      var fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n      var labelWidth = parentState.labelLayout.width;\n      var labelHeight = parentState.labelLayout.height;\n      var labelHalfWidth = labelWidth / 2;\n      var labelHalfHeight = labelHeight / 2;\n      var baseLabelTranslateX = (I18nManager.isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2) + (1 - labelScale) * paddingOffset.paddingHorizontal;\n      var minInputHeight = dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE : MIN_HEIGHT - LABEL_PADDING_TOP;\n      var inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n      var topPosition = calculateLabelTopPosition(labelHeight, inputHeight, multiline && height ? 0 : !height ? minInputHeight / 2 : 0);\n      if (height && typeof height !== 'number') console.warn('Currently we support only numbers in height prop');\n      var paddingSettings = {\n        height: height ? +height : null,\n        labelHalfHeight: labelHalfHeight,\n        offset: INPUT_OFFSET,\n        multiline: multiline ? multiline : null,\n        dense: dense ? dense : null,\n        topPosition: topPosition,\n        fontSize: fontSize,\n        label: label,\n        scale: fontScale,\n        isAndroid: Platform.OS === 'android',\n        styles: StyleSheet.flatten(dense ? styles.inputFlatDense : styles.inputFlat)\n      };\n      var pad = calculatePadding(paddingSettings);\n      var paddingFlat = adjustPaddingFlat(_objectSpread(_objectSpread({}, paddingSettings), {}, {\n        pad: pad\n      }));\n      var baseLabelTranslateY = -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n      var placeholderOpacity = hasActiveOutline ? interpolatePlaceholder(parentState.labeled, hasActiveOutline) : parentState.labelLayout.measured ? 1 : 0;\n      var labelProps = {\n        label: label,\n        onLayoutAnimatedText: onLayoutAnimatedText,\n        placeholderOpacity: placeholderOpacity,\n        error: error,\n        placeholderStyle: styles.placeholder,\n        baseLabelTranslateY: baseLabelTranslateY,\n        baseLabelTranslateX: baseLabelTranslateX,\n        font: font,\n        fontSize: fontSize,\n        fontWeight: fontWeight,\n        labelScale: labelScale,\n        wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n        topPosition: topPosition,\n        paddingOffset: paddingOffset,\n        hasActiveOutline: hasActiveOutline,\n        activeColor: activeColor,\n        placeholderColor: placeholderColor,\n        errorColor: errorColor\n      };\n      var minHeight = height || (dense ? label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT : MIN_HEIGHT);\n      var flatHeight = inputHeight + (!height ? dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP : 0);\n      return React.createElement(View, {\n        style: [containerStyle, viewStyle]\n      }, React.createElement(Underline, {\n        parentState: parentState,\n        underlineColorCustom: underlineColorCustom,\n        error: error,\n        colors: colors,\n        activeColor: activeColor\n      }), React.createElement(View, {\n        style: {\n          paddingTop: 0,\n          paddingBottom: 0,\n          minHeight: minHeight\n        }\n      }, React.createElement(InputLabel, {\n        parentState: parentState,\n        labelProps: labelProps\n      }), render === null || render === void 0 ? void 0 : render(_objectSpread(_objectSpread({}, rest), {}, {\n        ref: innerRef,\n        onChangeText: onChangeText,\n        placeholder: label ? parentState.placeholder : this.props.placeholder,\n        placeholderTextColor: placeholderColor,\n        editable: !disabled && editable,\n        selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        underlineColorAndroid: 'transparent',\n        multiline: multiline,\n        style: [styles.input, paddingOffset, !multiline || multiline && height ? {\n          height: flatHeight\n        } : {}, paddingFlat, _objectSpread(_objectSpread({}, font), {}, {\n          fontSize: fontSize,\n          fontWeight: fontWeight,\n          color: inputTextColor,\n          textAlignVertical: multiline ? 'top' : 'center'\n        })]\n      }))));\n    }\n  }]);\n\n  return TextInputFlat;\n}(React.Component);\n\n_defineProperty(TextInputFlat, \"defaultProps\", {\n  disabled: false,\n  error: false,\n  multiline: false,\n  editable: true,\n  render: function render(props) {\n    return React.createElement(NativeTextInput, props);\n  }\n});\n\nexport default TextInputFlat;\n\nvar Underline = function Underline(_ref2) {\n  var parentState = _ref2.parentState,\n      error = _ref2.error,\n      colors = _ref2.colors,\n      activeColor = _ref2.activeColor,\n      underlineColorCustom = _ref2.underlineColorCustom;\n  var backgroundColor = parentState.focused ? activeColor : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return React.createElement(Animated.View, {\n    style: [styles.underline, {\n      backgroundColor: backgroundColor,\n      transform: [{\n        scaleY: parentState.focused ? 1 : 0.5\n      }]\n    }]\n  });\n};\n\nvar styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    zIndex: 1\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2\n  },\n  paddingOffset: {\n    paddingHorizontal: LABEL_PADDING_HORIZONTAL\n  }\n});","map":{"version":3,"sources":["TextInputFlat.tsx"],"names":["MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","LABEL_PADDING_TOP_DENSE","MIN_HEIGHT","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","INPUT_OFFSET","TextInputFlat","React","disabled","error","multiline","editable","render","props","onLayoutAnimatedText","fonts","font","hasActiveOutline","parentState","fontSize","paddingHorizontal","StyleSheet","fontSizeStyle","paddingOffset","styles","inputTextColor","activeColor","color","colors","placeholderColor","underlineColorCustom","errorColor","underlineColor","containerStyle","backgroundColor","theme","borderTopLeftRadius","borderTopRightRadius","roundness","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","MAXIMIZED_LABEL_FONT_SIZE","labelWidth","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","minInputHeight","dense","label","inputHeight","calculateInputHeight","topPosition","calculateLabelTopPosition","height","console","paddingSettings","offset","scale","isAndroid","Platform","pad","calculatePadding","paddingFlat","adjustPaddingFlat","baseLabelTranslateY","placeholderOpacity","interpolatePlaceholder","labelProps","placeholderStyle","fontWeight","wiggleOffsetX","minHeight","flatHeight","paddingTop","paddingBottom","ref","onChangeText","placeholder","placeholderTextColor","selectionColor","onFocus","onBlur","underlineColorAndroid","style","textAlignVertical","Underline","transform","scaleY","position","left","underline","right","bottom","input","flexGrow","margin","textAlign","zIndex","inputFlat","inputFlatDense","LABEL_PADDING_HORIZONTAL"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport InputLabel from './Label/InputLabel';\nimport { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  LABEL_PADDING_HORIZONTAL,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingFlat,\n  Padding,\n  interpolatePlaceholder,\n} from './helpers';\n\nconst MINIMIZED_LABEL_Y_OFFSET = -18;\n\nconst LABEL_PADDING_TOP = 30;\nconst LABEL_PADDING_TOP_DENSE = 24;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT_WL = 52;\nconst MIN_DENSE_HEIGHT = 40;\n\nconst INPUT_OFFSET = 8;\n\nclass TextInputFlat extends React.Component<ChildTextInputProps, {}> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      underlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      ...rest\n    } = this.props;\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      paddingHorizontal,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n    const paddingOffset = (paddingHorizontal !== undefined &&\n    typeof paddingHorizontal === 'number'\n      ? { paddingHorizontal }\n      : StyleSheet.flatten(styles.paddingOffset)) as {\n      paddingHorizontal: number;\n    };\n\n    let inputTextColor,\n      activeColor,\n      underlineColorCustom,\n      placeholderColor,\n      errorColor;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = colors.disabled;\n      underlineColorCustom = 'transparent';\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = colors.placeholder;\n      errorColor = colors.error;\n      underlineColorCustom = underlineColor || colors.disabled;\n    }\n\n    const containerStyle = {\n      backgroundColor: theme.dark\n        ? color(colors.background)\n            .lighten(0.24)\n            .rgb()\n            .string()\n        : color(colors.background)\n            .darken(0.06)\n            .rgb()\n            .string(),\n      borderTopLeftRadius: theme.roundness,\n      borderTopRightRadius: theme.roundness,\n    };\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n        (labelHalfWidth - (labelScale * labelWidth) / 2) +\n      (1 - labelScale) * paddingOffset.paddingHorizontal;\n\n    const minInputHeight = dense\n      ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) -\n        LABEL_PADDING_TOP_DENSE\n      : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n    );\n\n    if (height && typeof height !== 'number')\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: INPUT_OFFSET,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(\n        dense ? styles.inputFlatDense : styles.inputFlat\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingFlat = adjustPaddingFlat({\n      ...paddingSettings,\n      pad,\n    });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = hasActiveOutline\n      ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n      : parentState.labelLayout.measured\n      ? 1\n      : 0;\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      paddingOffset,\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      errorColor,\n    };\n\n    const minHeight =\n      height ||\n      (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n    const flatHeight =\n      inputHeight +\n      (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n    return (\n      <View style={[containerStyle, viewStyle]}>\n        <Underline\n          parentState={parentState}\n          underlineColorCustom={underlineColorCustom}\n          error={error}\n          colors={colors}\n          activeColor={activeColor}\n        />\n        <View\n          style={{\n            paddingTop: 0,\n            paddingBottom: 0,\n            minHeight,\n          }}\n        >\n          <InputLabel parentState={parentState} labelProps={labelProps} />\n\n          {render?.({\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            // @ts-ignore\n            placeholder: label\n              ? parentState.placeholder\n              : this.props.placeholder,\n            placeholderTextColor: placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              paddingOffset,\n              !multiline || (multiline && height) ? { height: flatHeight } : {},\n              paddingFlat,\n              {\n                ...font,\n                fontSize,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n              },\n            ],\n          })}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors: {\n    error: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n}: UnderlineProps) => {\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return (\n    <Animated.View\n      style={[\n        styles.underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [{ scaleY: parentState.focused ? 1 : 0.5 }],\n        },\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    zIndex: 1,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  paddingOffset: {\n    paddingHorizontal: LABEL_PADDING_HORIZONTAL,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}