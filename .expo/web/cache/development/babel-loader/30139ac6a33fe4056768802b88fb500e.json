{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"./Button\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nimport { withTheme } from \"../core/theming\";\nvar DURATION_SHORT = 4000;\nvar DURATION_MEDIUM = 7000;\nvar DURATION_LONG = 10000;\n\nvar Snackbar = function (_React$Component) {\n  _inherits(Snackbar, _React$Component);\n\n  var _super = _createSuper(Snackbar);\n\n  function Snackbar() {\n    var _this;\n\n    _classCallCheck(this, Snackbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      opacity: new Animated.Value(0.0),\n      hidden: !_this.props.visible\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function () {\n      if (_this.props.visible) {\n        _this.show();\n      } else {\n        _this.hide();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"show\", function () {\n      if (_this.hideTimeout) {\n        clearTimeout(_this.hideTimeout);\n      }\n\n      _this.setState({\n        hidden: false\n      });\n\n      var scale = _this.props.theme.animation.scale;\n      Animated.timing(_this.state.opacity, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start(function (_ref) {\n        var finished = _ref.finished;\n\n        if (finished) {\n          var duration = _this.props.duration;\n          var isInfinity = duration === Number.POSITIVE_INFINITY || duration === Number.NEGATIVE_INFINITY;\n\n          if (finished && !isInfinity) {\n            _this.hideTimeout = setTimeout(_this.props.onDismiss, duration);\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hide\", function () {\n      if (_this.hideTimeout) {\n        clearTimeout(_this.hideTimeout);\n      }\n\n      var scale = _this.props.theme.animation.scale;\n      Animated.timing(_this.state.opacity, {\n        toValue: 0,\n        duration: 100 * scale,\n        useNativeDriver: true\n      }).start(function (_ref2) {\n        var finished = _ref2.finished;\n\n        if (finished) {\n          _this.setState({\n            hidden: true\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideTimeout\", void 0);\n\n    return _this;\n  }\n\n  _createClass(Snackbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.visible) {\n        this.show();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this.toggle();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.hideTimeout) {\n        clearTimeout(this.hideTimeout);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          visible = _this$props.visible,\n          action = _this$props.action,\n          onDismiss = _this$props.onDismiss,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          wrapperStyle = _this$props.wrapperStyle,\n          duration = _this$props.duration,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"visible\", \"action\", \"onDismiss\", \"theme\", \"style\", \"wrapperStyle\", \"duration\"]);\n\n      var colors = theme.colors,\n          roundness = theme.roundness;\n\n      if (this.state.hidden) {\n        return null;\n      }\n\n      return React.createElement(SafeAreaView, {\n        pointerEvents: \"box-none\",\n        style: [styles.wrapper, wrapperStyle]\n      }, React.createElement(Surface, _extends({\n        pointerEvents: \"box-none\",\n        accessibilityLiveRegion: \"polite\",\n        style: [styles.container, {\n          borderRadius: roundness,\n          opacity: this.state.opacity,\n          transform: [{\n            scale: visible ? this.state.opacity.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.9, 1]\n            }) : 1\n          }]\n        }, {\n          backgroundColor: colors.onSurface\n        }, style]\n      }, rest), React.createElement(Text, {\n        style: [styles.content, {\n          marginRight: action ? 0 : 16,\n          color: colors.surface\n        }]\n      }, children), action ? React.createElement(Button, {\n        accessibilityLabel: action.accessibilityLabel,\n        onPress: function onPress() {\n          action.onPress();\n          onDismiss();\n        },\n        style: styles.button,\n        color: colors.accent,\n        compact: true,\n        mode: \"text\"\n      }, action.label) : null));\n    }\n  }]);\n\n  return Snackbar;\n}(React.Component);\n\n_defineProperty(Snackbar, \"DURATION_SHORT\", DURATION_SHORT);\n\n_defineProperty(Snackbar, \"DURATION_MEDIUM\", DURATION_MEDIUM);\n\n_defineProperty(Snackbar, \"DURATION_LONG\", DURATION_LONG);\n\n_defineProperty(Snackbar, \"defaultProps\", {\n  duration: DURATION_MEDIUM\n});\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  container: {\n    elevation: 6,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: 8,\n    borderRadius: 4\n  },\n  content: {\n    marginLeft: 16,\n    marginVertical: 14,\n    flexWrap: 'wrap',\n    flex: 1\n  },\n  button: {\n    marginHorizontal: 8,\n    marginVertical: 6\n  }\n});\nexport default withTheme(Snackbar);","map":{"version":3,"sources":["Snackbar.tsx"],"names":["DURATION_SHORT","DURATION_MEDIUM","DURATION_LONG","Snackbar","React","duration","opacity","Animated","hidden","visible","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","clearTimeout","scale","toValue","useNativeDriver","finished","isInfinity","Number","setTimeout","render","roundness","styles","borderRadius","transform","inputRange","outputRange","backgroundColor","colors","onSurface","marginRight","action","color","surface","onDismiss","wrapper","position","bottom","width","container","elevation","flexDirection","justifyContent","alignItems","margin","content","marginLeft","marginVertical","flexWrap","flex","button","marginHorizontal","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  SafeAreaView,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n  View,\n} from 'react-native';\n\nimport Button from './Button';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Whether the Snackbar is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Label and press callback for the action button. It should contain the following properties:\n   * - `label` - Label of the action button\n   * - `onPress` - Callback that is called when action button is pressed.\n   */\n  action?: {\n    label: string;\n    accessibilityLabel?: string;\n    onPress: () => void;\n  };\n  /**\n   * The duration for which the Snackbar is shown.\n   */\n  duration?: number;\n  /**\n   * Callback called when Snackbar is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Text content of the Snackbar.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the wrapper of the snackbar\n   */\n  wrapperStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  opacity: Animated.Value;\n  hidden: boolean;\n};\n\nconst DURATION_SHORT = 4000;\nconst DURATION_MEDIUM = 7000;\nconst DURATION_LONG = 10000;\n\n/**\n * Snackbars provide brief feedback about an operation through a message at the bottom of the screen.\n * Snackbar by default use onSurface color from theme\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/snackbar.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, StyleSheet } from 'react-native';\n * import { Button, Snackbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const onToggleSnackBar = () => setVisible(!visible);\n *\n *   const onDismissSnackBar = () => setVisible(false);\n *\n *   return (\n *     <View style={styles.container}>\n *       <Button onPress={onToggleSnackBar}>{visible ? 'Hide' : 'Show'}</Button>\n *       <Snackbar\n *         visible={visible}\n *         onDismiss={onDismissSnackBar}\n *         action={{\n *           label: 'Undo',\n *           onPress: () => {\n *             // Do something\n *           },\n *         }}>\n *         Hey there! I'm a Snackbar.\n *       </Snackbar>\n *     </View>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'space-between',\n *   },\n * });\n *\n * export default MyComponent;\n * ```\n */\nclass Snackbar extends React.Component<Props, State> {\n  /**\n   * Show the Snackbar for a short duration.\n   */\n  static DURATION_SHORT = DURATION_SHORT;\n\n  /**\n   * Show the Snackbar for a medium duration.\n   */\n  static DURATION_MEDIUM = DURATION_MEDIUM;\n\n  /**\n   * Show the Snackbar for a long duration.\n   */\n  static DURATION_LONG = DURATION_LONG;\n\n  static defaultProps = {\n    duration: DURATION_MEDIUM,\n  };\n\n  state = {\n    opacity: new Animated.Value(0.0),\n    hidden: !this.props.visible,\n  };\n\n  componentDidMount() {\n    if (this.props.visible) {\n      this.show();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      this.toggle();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.hideTimeout) {\n      clearTimeout(this.hideTimeout);\n    }\n  }\n\n  private toggle = () => {\n    if (this.props.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  private show = () => {\n    if (this.hideTimeout) {\n      clearTimeout(this.hideTimeout);\n    }\n    this.setState({\n      hidden: false,\n    });\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.opacity, {\n      toValue: 1,\n      duration: 200 * scale,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished) {\n        const { duration } = this.props;\n        const isInfinity =\n          duration === Number.POSITIVE_INFINITY ||\n          duration === Number.NEGATIVE_INFINITY;\n\n        if (finished && !isInfinity) {\n          this.hideTimeout = setTimeout(this.props.onDismiss, duration);\n        }\n      }\n    });\n  };\n\n  private hide = () => {\n    if (this.hideTimeout) {\n      clearTimeout(this.hideTimeout);\n    }\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.opacity, {\n      toValue: 0,\n      duration: 100 * scale,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished) {\n        this.setState({ hidden: true });\n      }\n    });\n  };\n\n  private hideTimeout?: number;\n\n  render() {\n    const {\n      children,\n      visible,\n      action,\n      onDismiss,\n      theme,\n      style,\n      wrapperStyle,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      duration,\n      ...rest\n    } = this.props;\n    const { colors, roundness } = theme;\n\n    if (this.state.hidden) {\n      return null;\n    }\n\n    return (\n      <SafeAreaView\n        pointerEvents=\"box-none\"\n        style={[styles.wrapper, wrapperStyle]}\n      >\n        <Surface\n          pointerEvents=\"box-none\"\n          accessibilityLiveRegion=\"polite\"\n          style={\n            [\n              styles.container,\n              {\n                borderRadius: roundness,\n                opacity: this.state.opacity,\n                transform: [\n                  {\n                    scale: visible\n                      ? this.state.opacity.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [0.9, 1],\n                        })\n                      : 1,\n                  },\n                ],\n              },\n              { backgroundColor: colors.onSurface },\n              style,\n            ] as StyleProp<ViewStyle>\n          }\n          {...rest}\n        >\n          <Text\n            style={[\n              styles.content,\n              { marginRight: action ? 0 : 16, color: colors.surface },\n            ]}\n          >\n            {children}\n          </Text>\n          {action ? (\n            <Button\n              accessibilityLabel={action.accessibilityLabel}\n              onPress={() => {\n                action.onPress();\n                onDismiss();\n              }}\n              style={styles.button}\n              color={colors.accent}\n              compact\n              mode=\"text\"\n            >\n              {action.label}\n            </Button>\n          ) : null}\n        </Surface>\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n  container: {\n    elevation: 6,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: 8,\n    borderRadius: 4,\n  },\n  content: {\n    marginLeft: 16,\n    marginVertical: 14,\n    flexWrap: 'wrap',\n    flex: 1,\n  },\n  button: {\n    marginHorizontal: 8,\n    marginVertical: 6,\n  },\n});\n\nexport default withTheme(Snackbar);\n"]},"metadata":{},"sourceType":"module"}